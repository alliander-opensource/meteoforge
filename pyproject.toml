[project]
name = "meteoforge"
version = "3.0.0-alpha.1"
description = "The MeteoForge Project provides a set of tools to work with meteorological data, focused on downloading, processing and formatting datasets from various sources."
authors = [
    { name = "Raoul Linnenbank", email = "58594297+rflinnenbank@users.noreply.github.com" }
]
license = { text = "MPL2.0" }
readme = "README.md"
requires-python = ">=3.13"
dynamic = ["dependencies"]

[tool.poetry.urls]
homepage = "https://github.com/alliander-opensource/meteoforge"
repository = "https://github.com/alliander-opensource/meteoforge"
documentation = "https://github.com/alliander-opensource/meteoforge"

[tool.poetry.dependencies]
dask = "^2025.7"
netcdf4 = "^1.7.2"
numpy = "^2.3.1"
pydantic = "^2.11.7"
pyproj = "^3.7.1"
xarray = "^2025.7.1"
zarr = "^3.1.0"
colorlog = "^6.9.0"

[tool.poetry.group.dev.dependencies]
coverage = "^7.9.2"
jupyter = "^1.1.1"
mkdocs = "^1.6.1"
mkdocs-material = "^9.6.15"
mkdocstrings = { extras = ["python"], version = "^0.29.1" }
mypy = "^1.17.0"
pre-commit = "^4.2.0"
pytest = "^8.4.1"
ruff = "^0.12.4"
types-pyyaml = "^6.0.12.20250516"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
output-format = "github"
line-length = 120
show-fixes = true
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
    "migrations",
]

[tool.ruff.lint]
select = [
    "E",
    "F",
    "UP",
    "B",
    "SIM",
    "I",
    "D",
]
ignore = [
    "D100",
    "D104",
    "D203",
    "D213",
]

[tool.ruff.lint.per-file-ignores]
"conftest.py" = ["E501"]

[tool.mypy]
packages = ["src.meteoforge"]

[tool.pytest.ini_options]
addopts = [
    "--cov",
    "--cov-branch",
    "--cov-report=xml",
    "--cov-report=term-missing"
]
minversion = "8.3.2"
testpaths = ["tests"]

[tool.coverage.run]
relative_files = false
omit = [
    "tests/*",
    ".venv/*",
]
